// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: guilds.sql

package queries

import (
	"context"
)

const createGuild = `-- name: CreateGuild :one
INSERT INTO guilds (
    discord_guild_id
) VALUES (
    $1
) RETURNING id, discord_guild_id
`

func (q *Queries) CreateGuild(ctx context.Context, discordGuildID string) (Guild, error) {
	row := q.db.QueryRow(ctx, createGuild, discordGuildID)
	var i Guild
	err := row.Scan(&i.ID, &i.DiscordGuildID)
	return i, err
}

const createGuilds = `-- name: CreateGuilds :execrows
INSERT INTO guilds ("discord_guild_id") 
VALUES (UNNEST($1::varchar[])) 
ON CONFLICT ("discord_guild_id") DO NOTHING
`

func (q *Queries) CreateGuilds(ctx context.Context, discordGuildIds []string) (int64, error) {
	result, err := q.db.Exec(ctx, createGuilds, discordGuildIds)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}

const deleteGuildByDiscordID = `-- name: DeleteGuildByDiscordID :exec
DELETE FROM guilds WHERE discord_guild_id = $1
`

func (q *Queries) DeleteGuildByDiscordID(ctx context.Context, discordGuildID string) error {
	_, err := q.db.Exec(ctx, deleteGuildByDiscordID, discordGuildID)
	return err
}

const deleteGuildByID = `-- name: DeleteGuildByID :exec
DELETE FROM guilds WHERE id = $1
`

func (q *Queries) DeleteGuildByID(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteGuildByID, id)
	return err
}

const getGuildByDiscordID = `-- name: GetGuildByDiscordID :one
SELECT id, discord_guild_id FROM guilds WHERE discord_guild_id = $1
`

func (q *Queries) GetGuildByDiscordID(ctx context.Context, discordGuildID string) (Guild, error) {
	row := q.db.QueryRow(ctx, getGuildByDiscordID, discordGuildID)
	var i Guild
	err := row.Scan(&i.ID, &i.DiscordGuildID)
	return i, err
}

const getGuildByID = `-- name: GetGuildByID :one
SELECT id, discord_guild_id FROM guilds WHERE id = $1
`

func (q *Queries) GetGuildByID(ctx context.Context, id int32) (Guild, error) {
	row := q.db.QueryRow(ctx, getGuildByID, id)
	var i Guild
	err := row.Scan(&i.ID, &i.DiscordGuildID)
	return i, err
}
